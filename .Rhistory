palette = ("Greens"))+
tmap::tm_layout(
title = "Forest cover in countries of REDD+ projects in 2015 (forest ha/km2)")+
tmap::tm_view(view.legend.position = c("right","bottom"))
} else if (variable=="emissions"){
tmap::tm_shape(redd_data)+
tmap::tm_fill("emissions.den",title="Emissions (Ton of CO2/km2)",
breaks = c(0, 300, 600,900, 1200,1500, Inf),
textNA = "No REDD+ projects",
palette = ("YlOrRd"))+
tmap::tm_layout(title = "Emissions from Land Use Change and Forestry in countries of REDD+ projects in 2016 (Ton of Co2/km2)")+
tmap::tm_view(view.legend.position = c("right","bottom"))
} else tmap::tm_shape(redd_data)+
tmap::tm_polygons("member")+
tmap::tm_layout(
title = "Countries of REDD+ projects in 2015")
}
tm_shape(redd_data)+
tm_polygons("Forest cover", convert2density = TRUE)+
tmap_options(max.categories= 5)+
tm_layout(
title = "Deforestation rate in countries of REDD+ projects"
)+
#  tm_text("iso_a3", size = "AREA")
REDDworld("forestcover")
tm_shape(redd_data)+
tm_polygons("Forest cover", convert2density = TRUE)+
tmap_options(max.categories= 5)+
tm_layout(
title = "Deforestation rate in countries of REDD+ projects"
)+
#  tm_text("iso_a3", size = "AREA")
REDDworld("emissions")
REDDworld<-function(variable="AUTO"){
#base url
url_api<- "http://www.reddprojectsdatabase.org/view/countries.php"
#Check what we get back from here
reply <- httr::GET(url_api)
#extract info from body
reply_content<-httr::content(reply)
#crawl for table
xml_prod<-xml2::xml_find_all(reply_content, "//table")
xml2::xml_text(xml2::xml_children(xml2::xml_contents(xml2::xml_children(xml_prod)[[1]])))
library(magrittr) #I did not understand how to call the function without the library
#Extract the head of the table
prod_head<-xml2::xml_children(xml_prod)[[1]]%>%
xml2::xml_contents()%>%
xml2::xml_children()%>%
xml2::xml_text()
#Extract the body of the table
products_body<-xml2::xml_children(xml_prod)[[2]]%>%
xml2::xml_children()%>%
lapply(function(x){
x<-xml2::xml_contents(x)
xml2::xml_text(x)[seq(1, length(x), by=1)]
})
#Build Products data frame
products0<- do.call(rbind.data.frame, products_body)
names(products0) <- c("name","GDP", "Forest_cover", "Deforestation rate", "emissions", "Funds", "View")
products<-dplyr::mutate(products0, member="REDD+ projects")
#Extract world map
library(tmap)
data("World")
#include REDD data
redd_data0<-merge(World, products, by="name", all=TRUE)
redd_data1<-dplyr::mutate(redd_data0,             emissions.den= as.numeric(emissions)*1000000/(as.numeric(area)))
redd_data<- dplyr::mutate(redd_data1,             forest.den= as.numeric(Forest_cover)*1000/(as.numeric(area)))
tmap::tmap_mode("view")
#Choose variable to map
if(variable=="forestcover"){
tmap::tm_shape(redd_data)+
tmap::tm_fill("forest.den",title="Forest density",
breaks = c(0, 0.10000, 0.20000,0.3, 0.4,0.50000, 0.6000, Inf),
textNA = "No REDD+ projects",
palette = ("Greens"))+
tmap::tm_layout(
title = "Forest cover in countries of REDD+ projects in 2015 (forest ha/km2)")+
tmap::tm_view(view.legend.position = c("right","bottom"))
} else if (variable=="emissions"){
tmap::tm_shape(redd_data)+
tmap::tm_fill("emissions.den",title="Emissions (Ton of CO2/km2)",
breaks = c(0, 300, 600,900, 1200,1500, Inf),
textNA = "No REDD+ projects",
palette = ("YlOrRd"))+
tmap::tm_layout(title = "Emissions from Land Use Change and Forestry in countries of REDD+ projects in 2016 (Ton of Co2/km2)")+
tmap::tm_view(view.legend.position = c("right","bottom"))
} else tmap::tm_shape(redd_data)+
tmap::tm_polygons("member")+
tmap::tm_layout(
title = "Countries of REDD+ projects in 2015")
}
tm_shape(redd_data)+
tm_polygons("Forest cover", convert2density = TRUE)+
tmap_options(max.categories= 5)+
tm_layout(
title = "Deforestation rate in countries of REDD+ projects"
)+
#  tm_text("iso_a3", size = "AREA")
REDDworld("emissions")
#base url
url_api<- "http://www.reddprojectsdatabase.org/view/countries.php"
#Check what we get back from here
reply <- httr::GET(url_api)
#extract info from body
reply_content<-httr::content(reply)
#crawl for table
xml_prod<-xml2::xml_find_all(reply_content, "//table")
xml2::xml_text(xml2::xml_children(xml2::xml_contents(xml2::xml_children(xml_prod)[[1]])))
library(magrittr) #I did not understand how to call the function without the library
#Extract the head of the table
prod_head<-xml2::xml_children(xml_prod)[[1]]%>%
xml2::xml_contents()%>%
xml2::xml_children()%>%
xml2::xml_text()
#Extract the body of the table
products_body<-xml2::xml_children(xml_prod)[[2]]%>%
xml2::xml_children()%>%
lapply(function(x){
x<-xml2::xml_contents(x)
xml2::xml_text(x)[seq(1, length(x), by=1)]
})
products0<- do.call(rbind.data.frame, products_body)
names(products0) <- c("name","GDP", "Forest_cover", "Deforestation rate", "emissions", "Funds", "View")
products<-dplyr::mutate(products0, member="REDD+ projects")
#Extract world map
library(tmap)
data("World")
#include REDD data
redd_data0<-merge(World, products, by="name", all=TRUE)
redd_data1<-dplyr::mutate(redd_data0,             emissions.den= as.numeric(emissions)*1000000/(as.numeric(area)))
redd_data<- dplyr::mutate(redd_data1,             forest.den= as.numeric(Forest_cover)*1000/(as.numeric(area)))
tmap::tmap_mode("view")
tmap::tm_shape(redd_data)+
tmap::tm_fill("forest.den",title="Forest density",
breaks = c(0, 0.10000, 0.20000,0.3, 0.4,0.50000, 0.6000, Inf),
textNA = "No REDD+ projects",
palette = ("Greens"))+
tmap::tm_layout(
title = "Forest cover in countries of REDD+ projects in 2015 (forest ha/km2)")+
tmap::tm_view(view.legend.position = c("right","bottom"))
tmap::tm_shape(redd_data)+
tmap::tm_fill("emissions.den",title="Emissions (Ton of CO2/km2)",
breaks = c(0, 300, 600,900, 1200,1500, Inf),
textNA = "No REDD+ projects",
palette = ("YlOrRd"))+
tmap::tm_layout(title = "Emissions from Land Use Change and Forestry in countries of REDD+ projects in 2016 (Ton of Co2/km2)")+
tmap::tm_view(view.legend.position = c("right","bottom"))
tmap::tm_shape(redd_data)+
tmap::tm_polygons("member")+
tmap::tm_layout(
title = "Countries of REDD+ projects in 2015")
REDDworld<-function(variable="AUTO"){
#base url
url_api<- "http://www.reddprojectsdatabase.org/view/countries.php"
#Check what we get back from here
reply <- httr::GET(url_api)
#extract info from body
reply_content<-httr::content(reply)
#crawl for table
xml_prod<-xml2::xml_find_all(reply_content, "//table")
xml2::xml_text(xml2::xml_children(xml2::xml_contents(xml2::xml_children(xml_prod)[[1]])))
library(magrittr) #I did not understand how to call the function without the library
#Extract the head of the table
prod_head<-xml2::xml_children(xml_prod)[[1]]%>%
xml2::xml_contents()%>%
xml2::xml_children()%>%
xml2::xml_text()
#Extract the body of the table
products_body<-xml2::xml_children(xml_prod)[[2]]%>%
xml2::xml_children()%>%
lapply(function(x){
x<-xml2::xml_contents(x)
xml2::xml_text(x)[seq(1, length(x), by=1)]
})
#Build Products data frame
products0<- do.call(rbind.data.frame, products_body)
names(products0) <- c("name","GDP", "Forest_cover", "Deforestation rate", "emissions", "Funds", "View")
products<-dplyr::mutate(products0, member="REDD+ projects")
#Extract world map
library(tmap)
data("World")
#include REDD data
redd_data0<-merge(World, products, by="name", all=TRUE)
redd_data1<-dplyr::mutate(redd_data0,             emissions.den= as.numeric(emissions)*1000000/(as.numeric(area)))
redd_data<- dplyr::mutate(redd_data1,             forest.den= as.numeric(Forest_cover)*1000/(as.numeric(area)))
tmap::tmap_mode("view")
#Choose variable to map
if(variable=="forestcover"){
tmap::tm_shape(redd_data)+
tmap::tm_fill("forest.den",title="Forest density",
breaks = c(0, 0.10000, 0.20000,0.3, 0.4,0.50000, 0.6000, Inf),
textNA = "No REDD+ projects",
palette = ("Greens"))+
tmap::tm_layout(
title = "Forest cover in countries of REDD+ projects in 2015 (forest ha/km2)")+
tmap::tm_view(view.legend.position = c("right","bottom"))
} else if (variable=="emissions"){
tmap::tm_shape(redd_data)+
tmap::tm_fill("emissions.den",title="Emissions (Ton of CO2/km2)",
breaks = c(0, 300, 600,900, 1200,1500, Inf),
textNA = "No REDD+ projects",
palette = ("YlOrRd"))+
tmap::tm_layout(title = "Emissions from Land Use Change and Forestry in countries of REDD+ projects in 2016 (Ton of Co2/km2)")+
tmap::tm_view(view.legend.position = c("right","bottom"))
} else tmap::tm_shape(redd_data)+
tmap::tm_polygons("member")+
tmap::tm_layout(
title = "Countries of REDD+ projects in 2015")
}
tm_shape(redd_data)+
tm_polygons("Forest cover", convert2density = TRUE)+
tmap_options(max.categories= 5)+
tm_layout(
title = "Deforestation rate in countries of REDD+ projects"
)+
#  tm_text("iso_a3", size = "AREA")
REDDworld("emissions")
tm_shape(redd_data)+
tm_polygons("Forest cover", convert2density = TRUE)+
tmap_options(max.categories= 5)+
tm_layout(
title = "Deforestation rate in countries of REDD+ projects"
)+
#  tm_text("iso_a3", size = "AREA")
REDDworld()
REDDworld<-function(variable="AUTO"){
#base url
url_api<- "http://www.reddprojectsdatabase.org/view/countries.php"
#Check what we get back from here
reply <- httr::GET(url_api)
#extract info from body
reply_content<-httr::content(reply)
#crawl for table
xml_prod<-xml2::xml_find_all(reply_content, "//table")
xml2::xml_text(xml2::xml_children(xml2::xml_contents(xml2::xml_children(xml_prod)[[1]])))
library(magrittr) #I did not understand how to call the function without the library
#Extract the head of the table
prod_head<-xml2::xml_children(xml_prod)[[1]]%>%
xml2::xml_contents()%>%
xml2::xml_children()%>%
xml2::xml_text()
#Extract the body of the table
products_body<-xml2::xml_children(xml_prod)[[2]]%>%
xml2::xml_children()%>%
lapply(function(x){
x<-xml2::xml_contents(x)
xml2::xml_text(x)[seq(1, length(x), by=1)]
})
#Build Products data frame
products0<- do.call(rbind.data.frame, products_body)
names(products0) <- c("name","GDP", "Forest_cover", "Deforestation rate", "emissions", "Funds", "View")
products<-dplyr::mutate(products0, member="REDD+ projects")
#Extract world map
library(tmap)
data("World")
#include REDD data
redd_data0<-merge(World, products, by="name", all=TRUE)
redd_data1<-dplyr::mutate(redd_data0,             emissions.den= as.numeric(emissions)*1000000/(as.numeric(area)))
redd_data<- dplyr::mutate(redd_data1,             forest.den= as.numeric(Forest_cover)*1000/(as.numeric(area)))
tmap::tmap_mode("view")
#Choose variable to map
if(variable=="forestcover"){
tmap::tm_shape(redd_data)+
tmap::tm_fill("forest.den",title="Forest density",
breaks = c(0, 0.10000, 0.20000,0.3, 0.4,0.50000, 0.6000, Inf),
textNA = "No REDD+ projects",
palette = ("Greens"))+
tmap::tm_layout(
title = "Forest cover in countries of REDD+ projects in 2015 (forest ha/km2)")+
tmap::tm_view(view.legend.position = c("right","bottom"))
} else if (variable=="emissions"){
tmap::tm_shape(redd_data)+
tmap::tm_fill("emissions.den",title="Emissions (Ton of CO2/km2)",
breaks = c(0, 300, 600,900, 1200,1500, Inf),
textNA = "No REDD+ projects",
palette = ("YlOrRd"))+
tmap::tm_layout(title = "Emissions from Land Use Change and Forestry in countries of REDD+ projects in 2016 (Ton of Co2/km2)")+
tmap::tm_view(view.legend.position = c("right","bottom"))
} else tmap::tm_shape(redd_data)+
tmap::tm_polygons("member")+
tmap::tm_layout(
title = "Countries of REDD+ projects in 2015")
}
tm_shape(redd_data)+
tm_polygons("Forest cover", convert2density = TRUE)+
tmap_options(max.categories= 5)+
tm_layout(
title = "Deforestation rate in countries of REDD+ projects"
)+
#  tm_text("iso_a3", size = "AREA")
REDDworld()
REDDworld()
REDDworld("emissions")
?REDDworld
??REDDworld
REDDworld("forest cover")
REDDworld<-function(variable="AUTO"){
#base url
url_api<- "http://www.reddprojectsdatabase.org/view/countries.php"
#Check what we get back from here
reply <- httr::GET(url_api)
#extract info from body
reply_content<-httr::content(reply)
#crawl for table
xml_prod<-xml2::xml_find_all(reply_content, "//table")
xml2::xml_text(xml2::xml_children(xml2::xml_contents(xml2::xml_children(xml_prod)[[1]])))
library(magrittr) #I did not understand how to call the function without the library
#Extract the head of the table
prod_head<-xml2::xml_children(xml_prod)[[1]]%>%
xml2::xml_contents()%>%
xml2::xml_children()%>%
xml2::xml_text()
#Extract the body of the table
products_body<-xml2::xml_children(xml_prod)[[2]]%>%
xml2::xml_children()%>%
lapply(function(x){
x<-xml2::xml_contents(x)
xml2::xml_text(x)[seq(1, length(x), by=1)]
})
#Build Products data frame
products0<- do.call(rbind.data.frame, products_body)
names(products0) <- c("name","GDP", "Forest_cover", "Deforestation rate", "emissions", "Funds", "View")
products<-dplyr::mutate(products0, member="REDD+ projects")
variable1<-stringr::str_remove(variable, " ")
#changes all the characters to lowercase
variable2<-stringr::str_to_lower(variable1, locale = "en")
#Extract world map
library(tmap)
data("World")
#include REDD data
redd_data0<-merge(World, products, by="name", all=TRUE)
redd_data1<-dplyr::mutate(redd_data0,             emissions.den= as.numeric(emissions)*1000000/(as.numeric(area)))
redd_data<- dplyr::mutate(redd_data1,             forest.den= as.numeric(Forest_cover)*1000/(as.numeric(area)))
tmap::tmap_mode("view")
#Choose variable to map
if(variable2=="forestcover"){
tmap::tm_shape(redd_data)+
tmap::tm_fill("forest.den",title="Forest density",
breaks = c(0, 0.10000, 0.20000,0.3, 0.4,0.50000, 0.6000, Inf),
textNA = "No REDD+ projects",
palette = ("Greens"))+
tmap::tm_layout(
title = "Forest cover in countries of REDD+ projects in 2015 (forest ha/km2)")+
tmap::tm_view(view.legend.position = c("right","bottom"))
} else if (variable2=="emissions"){
tmap::tm_shape(redd_data)+
tmap::tm_fill("emissions.den",title="Emissions (Ton of CO2/km2)",
breaks = c(0, 300, 600,900, 1200,1500, Inf),
textNA = "No REDD+ projects",
palette = ("YlOrRd"))+
tmap::tm_layout(title = "Emissions from Land Use Change and Forestry in countries of REDD+ projects in 2016 (Ton of Co2/km2)")+
tmap::tm_view(view.legend.position = c("right","bottom"))
} else tmap::tm_shape(redd_data)+
tmap::tm_polygons("member")+
tmap::tm_layout(
title = "Countries of REDD+ projects in 2015")
}
REDDworld("forest cover")
defor_emiss(emission_factor = 117.06, points = 100, total_area = 9985930, years = 10, total_points = 10414)
defor_emiss<-function(area="auto", error=0, new_land_cover="the new land cover", emission_factor, error_ef=0, points, total_area, years, total_points){
#If it is not provided, calculates the area using the number of samples for an specific class
if(area=="auto") {
wi<-points/total_points
area<- wi*total_area
#calculates the standard error
Ei_per<-sqrt((wi*(1-wi))/(total_points-1))
#calculates the standard error in hectares
Ei_ha<-Ei_per*total_area
#calculates the confidence interval
confidence_interval<-1.96*Ei_ha
#calculates the confidence interval in hectares
conf_int_per<-confidence_interval/total_area
#calculates the inferior limit of the confidence interval
ci_inf<-area-Ei_ha
#calculates the superior limit of the confidence interval
ci_sup<-area+Ei_ha
#Calculates the error of the area
error<-confidence_interval/area
}
#calculates the Tons of Carbon emitted
TonC<-emission_factor*area
#calculates the Tons of Carbon per year
TonC_yr<-TonC/years
#Convert the tons of Carbon into tons of Carbon dioxide
fCO2<-3.666667
TonCO2<-TonC_yr*fCO2
#Calculates the error of the emission by adding the relative errors of area and emission factor
RE<-(((emission_factor*(error*area))+(error_ef*emission_factor)*area)/TonCO2)*100
#prints the results
cat("The emissions of CO2 related to deforestation due to", new_land_cover, "are", TonCO2, "TOnCO2/year with a relative error of ", RE, "%.")
}
defor_emiss(emission_factor = 117.06, points = 100, total_area = 9985930, years = 10, total_points = 10414)
definitions(forest degradation)
definitions<- function(term="auto"){
#removes blank spaces
term1<-stringr::str_remove(term, " ")
#changes all the characters to lowercase
term.low<-stringr::str_to_lower(term1, locale = "en")
#sets all the definitions
forest<-forest<-"'Forest is a large area of trees whose canopies cover at least 10 per cent of the sky spanning more than 0.5 hectares with trees higher than 5 meters and a canopy cover of more than 10 percent.' -UN-REDD"
defores<- "'Deforestation is the process of converting forest land to another land use.  In other words, the primary use of the land ceases to be forest'-United Nations Environment Programme, 2018"
deforate<-"'The Earth loses a forest area about the size of 40 football fields every minute.' -UN-REDD"
degra<-"'Forest degradation is the process of losing carbon stock from forest land – i.e. the land use remains forest, but the amount of carbon stock in the forest is reduced.'-United Nations Environment Programme, 2018"
affo<-"'Afforestation means the planting of trees on land which was never forested' -UN-REDD"
refo<-"'Reforestation means planting of trees on land which was forested before.' -UN-REDD"
bamboo<-"'Bamboo is a giant woody grass which is grown chiefly in the tropics. It is one of the fastest growing plants on Earth, with reported growth rates of 100 centimeters (39 inches) in 24 hours.' -UN-REDD"
redwoods<-"'Redwoods are the tallest trees in the world and can easily reach heights of 300 feet (91 meters).' -UN-REDD"
mang<-"'Mangroves are trees or shrubs which grows in tidal, chiefly tropical, coastal swamps, having numerous tangled roots that grow above the ground and form dense thickets.' -UN-REDD"
importance<-"'An estimated 1.6 billion people use forests for all or part of their livelihoods. Forests also play a crucial role in fighting catastrophic climate change by absorbing and storing massive amounts of CO2. Forests are home to 80% of the world’s terrestrial biodiversity.' -UN-REDD"
flood<-"'During heavy rains, trees reduce the risk of flooding. Experts say that woodland acts as a barrier to floodwater, while trees also prevent soil erosion, reducing sediment going into rivers and increasing water absorption into the ground.' -UN-REDD"
dry<-"'Forests can retain excess rainwater, prevent extreme run-offs (...). They can also help mitigate the effects of droughts by releasing water in the dry season, forests can also help provide clean water and mitigate the effects of droughts' -UN-REDD"
temp<-"'Trees could reduce temperatures in cities up to 8°C, lowering use of air conditioning and related emissions by up to 40 per cent.' -UN-REDD"
todas<-c(forest, defores, deforate, degra, affo, refo, bamboo, redwoods, mang, importance, flood, dry, temp)
#defines which definition will be shown as a result of the user request
if(term.low=="auto"){
def <- todas
} else if (term.low== "forest"){
def <- forest
} else if (term.low == "deforestation"){
def<-defores
} else if (term.low == "degradation"){
def<-degra
} else if (term.low == "afforestation"){
def<-affo
} else if (term.low == "reforestation"){
def<-refo
} else if (term.low== "bamboo"){
def <-bamboo
} else if (term.low== "redwoods"){
def<-redwoods
} else if (term.low == "mangroves"){
def<-mang
} else if (term.low == "importance"){
def <-importance
} else if (term.low == "floods"){
def<-flood
} else if (term.low == "droughts"){
def<-dry
} else if (term.low == "deforestationrate"){
def <-deforate
} else if (term.low == "temperature"){
def<-temp
} else def<-"Please, use a term from the list to get the definition or forest fact(forest, afforestation, reforestation...), you can find the list in the description of the function or leave empty to read all"
#prints the requested definition
print(def)
}
definitions(forest degradation)
definitions("forest degradation")
definitions("degradation")
REDDworld("forest cover")
REDDworld<-function(variable="AUTO"){
#base url
url_api<- "http://www.reddprojectsdatabase.org/view/countries.php"
#Check what we get back from here
reply <- httr::GET(url_api)
#extract info from body
reply_content<-httr::content(reply)
#crawl for table
xml_prod<-xml2::xml_find_all(reply_content, "//table")
xml2::xml_text(xml2::xml_children(xml2::xml_contents(xml2::xml_children(xml_prod)[[1]])))
library(magrittr) #I did not understand how to call the function without the library
#Extract the head of the table
prod_head<-xml2::xml_children(xml_prod)[[1]]%>%
xml2::xml_contents()%>%
xml2::xml_children()%>%
xml2::xml_text()
#Extract the body of the table
products_body<-xml2::xml_children(xml_prod)[[2]]%>%
xml2::xml_children()%>%
lapply(function(x){
x<-xml2::xml_contents(x)
xml2::xml_text(x)[seq(1, length(x), by=1)]
})
#Build Products data frame
products0<- do.call(rbind.data.frame, products_body)
names(products0) <- c("name","GDP", "Forest_cover", "Deforestation rate", "emissions", "Funds", "View")
products<-dplyr::mutate(products0, member="REDD+ projects")
variable1<-stringr::str_remove(variable, " ")
#changes all the characters to lowercase
variable2<-stringr::str_to_lower(variable1, locale = "en")
#Extract world map
library(tmap)
data("World")
#include REDD data
redd_data0<-merge(World, products, by="name", all=TRUE)
redd_data1<-dplyr::mutate(redd_data0,             emissions.den= as.numeric(emissions)*1000000/(as.numeric(area)))
redd_data<- dplyr::mutate(redd_data1,             forest.den= as.numeric(Forest_cover)*1000/(as.numeric(area)))
tmap::tmap_mode("view")
#Choose variable to map
if(variable2=="forestcover"){
tmap::tm_shape(redd_data)+
tmap::tm_fill("forest.den",title="Forest density",
breaks = c(0, 0.10000, 0.20000,0.3, 0.4,0.50000, 0.6000, Inf),
textNA = "No REDD+ projects",
palette = ("Greens"))+
tmap::tm_layout(
title = "Forest cover in countries of REDD+ projects in 2015 (forest ha/km2)")+
tmap::tm_view(view.legend.position = c("right","bottom"))
} else if (variable2=="emissions"){
tmap::tm_shape(redd_data)+
tmap::tm_fill("emissions.den",title="Emissions (Ton of CO2/km2)",
breaks = c(0, 300, 600,900, 1200,1500, Inf),
textNA = "No REDD+ projects",
palette = ("YlOrRd"))+
tmap::tm_layout(title = "Emissions from Land Use Change and Forestry in countries of REDD+ projects in 2016 (Ton of Co2/km2)")+
tmap::tm_view(view.legend.position = c("right","bottom"))
} else tmap::tm_shape(redd_data)+
tmap::tm_polygons("member")+
tmap::tm_layout(
title = "Countries of REDD+ projects in 2015")
}
REDDworld("forest cover")
