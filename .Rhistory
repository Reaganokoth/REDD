library(roxygen2)
getwd()
document()
git remote -v
pwd
library(REDD)
library(roxygen2)
library(devtools)
getwd()
install.packages("httr")
install.packages("xml2")
install.packages("magrittr")
install.packages("pbapply")
install.packages("magick")
library(httr)
library(xml2)
library(magrittr)
library(pbapply)
library(magick)
url_api<- "http://www.reddprojectsdatabase.org/view/countries.php"
#Check what we get back from here
reply <- GET(url_api)
http_status(reply)
#extract info from body
reply_content<-content(reply)
class(reply_content)
View(reply_content)
#crawl for table
xml_prod<-xml_find_all(reply_content, "//table")
xml_text(xml_children(xml_contents(xml_children(xml_prod)[[1]])))
#Extract the head of the table
prod_head<-xml_children(xml_prod)[[1]]%>%
xml_contents()%>%
xml_children()%>%
xml_text()
#Extract the body of the table
products_body<-xml_children(xml_prod)[[2]]%>%
xml_children()%>%
lapply(function(x){
x<-xml_contents(x)
xml_text(x)[seq(1, length(x), by=2)]
})
products<- do.call(rbind.data.frame, products_body)
View(products)
#Extract the body of the table
products_body<-xml_children(xml_prod)[[2]]%>%
xml_children()%>%
lapply(function(x){
x<-xml_contents(x)
xml_text(x)[seq(1, length(x), by=1)]
})
products<- do.call(rbind.data.frame, products_body)
View(products)
install.packages(c("maps", "rworldmap"))
defor_emiss<-function(area="auto", new_land_cover="agriculture", emission_factor, points, total_area, years, total_points){
if(area="auto") {
wi<-points/total_points
area<- wi*total_area
Ei_per<-sqrt((wi*(1-wi))/(total_points-1))
Ei_ha<-Ei_per*total_area
confidence_interval<-1.96*Ei_ha
conf_int_per<-confidence_interval/total_area
ci_inf<-area-Ei_ha
ci_sup<-area+Ei_ha
}
TonC<-emission_factor*area
TonC_yr<-TonC/years
fCO2<-3.666667
TonCO2<-TonC_yr*fCO2
print("The emissions of CO2 relate to deforestation due to", new_land_cover, "are", TonCO2, "TOnCO2/year.")
}
defor_emiss<-function(area="auto", new_land_cover="agriculture", emission_factor, points, total_area, years, total_points){
if(area=="auto") {
wi<-points/total_points
area<- wi*total_area
Ei_per<-sqrt((wi*(1-wi))/(total_points-1))
Ei_ha<-Ei_per*total_area
confidence_interval<-1.96*Ei_ha
conf_int_per<-confidence_interval/total_area
ci_inf<-area-Ei_ha
ci_sup<-area+Ei_ha
}
TonC<-emission_factor*area
TonC_yr<-TonC/years
fCO2<-3.666667
TonCO2<-TonC_yr*fCO2
print("The emissions of CO2 relate to deforestation due to", new_land_cover, "are", TonCO2, "TOnCO2/year.")
}
defor_emiss(emission_factor = 117.5, points = 50, total_area = 10889, years = 10, total_points = 11364)
defor_emiss<-function(area="auto", new_land_cover="agriculture", emission_factor, points, total_area, years, total_points){
if(area=="auto") {
wi<-points/total_points
area<- wi*total_area
Ei_per<-sqrt((wi*(1-wi))/(total_points-1))
Ei_ha<-Ei_per*total_area
confidence_interval<-1.96*Ei_ha
conf_int_per<-confidence_interval/total_area
ci_inf<-area-Ei_ha
ci_sup<-area+Ei_ha
}
TonC<-emission_factor*area
TonC_yr<-TonC/years
fCO2<-3.666667
TonCO2<-TonC_yr*fCO2
cat("The emissions of CO2 relate to deforestation due to", new_land_cover, "are", TonCO2, "TOnCO2/year.")
}
defor_emiss(emission_factor = 117.5, points = 50, total_area = 10889, years = 10, total_points = 11364)
defor_emiss<-function(area="auto", new_land_cover="the new land cover", emission_factor, error_ef=0, points, total_area, years, total_points){
if(area=="auto") {
wi<-points/total_points
area<- wi*total_area
Ei_per<-sqrt((wi*(1-wi))/(total_points-1))
Ei_ha<-Ei_per*total_area
confidence_interval<-1.96*Ei_ha
conf_int_per<-confidence_interval/total_area
ci_inf<-area-Ei_ha
ci_sup<-area+Ei_ha
}
TonC<-emission_factor*area
TonC_yr<-TonC/years
fCO2<-3.666667
TonCO2<-TonC_yr*fCO2
RE<-(Ei_per+error_ef)*100
cat("The emissions of CO2 related to deforestation due to", new_land_cover, "are", TonCO2, "TOnCO2/year with a relative error of ", RE, "%.")
}
defor_emiss(emission_factor = 117.5, points = 50, total_area = 10889, years = 10, total_points = 11364)
defor_emiss(emission_factor = 117.06, points = 10, total_area = 9985930, years = 10, total_points = 10414)
defor_emiss<-function(area="auto", new_land_cover="the new land cover", emission_factor, error_ef=0, points, total_area, years, total_points){
if(area=="auto") {
wi<-points/total_points
area<- wi*total_area
Ei_per<-sqrt((wi*(1-wi))/(total_points-1))
Ei_ha<-Ei_per*total_area
confidence_interval<-1.96*Ei_ha
conf_int_per<-confidence_interval/total_area
ci_inf<-area-Ei_ha
ci_sup<-area+Ei_ha
}
TonC<-emission_factor*area
TonC_yr<-TonC/years
fCO2<-3.666667
TonCO2<-TonC_yr*fCO2
RE<-(Ei_per)*100+error_ef
cat(area, "The emissions of CO2 related to deforestation due to", new_land_cover, "are", TonCO2, "TOnCO2/year with an error of ", RE, "%.")
}
defor_emiss(emission_factor = 117.06, points = 10, total_area = 9985930, years = 10, total_points = 10414)
cat(Ei_per, "The emissions of CO2 related to deforestation due to", new_land_cover, "are", TonCO2, "TOnCO2/year with an error of ", RE, "%.")
defor_emiss<-function(area="auto", new_land_cover="the new land cover", emission_factor, error_ef=0, points, total_area, years, total_points){
if(area=="auto") {
wi<-points/total_points
area<- wi*total_area
Ei_per<-sqrt((wi*(1-wi))/(total_points-1))
Ei_ha<-Ei_per*total_area
confidence_interval<-1.96*Ei_ha
conf_int_per<-confidence_interval/total_area
ci_inf<-area-Ei_ha
ci_sup<-area+Ei_ha
}
TonC<-emission_factor*area
TonC_yr<-TonC/years
fCO2<-3.666667
TonCO2<-TonC_yr*fCO2
RE<-(Ei_per)*100+error_ef
cat(Ei_per, "The emissions of CO2 related to deforestation due to", new_land_cover, "are", TonCO2, "TOnCO2/year with an error of ", RE, "%.")
}
defor_emiss(emission_factor = 117.06, points = 10, total_area = 9985930, years = 10, total_points = 10414)
defor_emiss<-function(area="auto", new_land_cover="the new land cover", emission_factor, error_ef=0, points, total_area, years, total_points){
if(area=="auto") {
wi<-points/total_points
area<- wi*total_area
Ei_per<-sqrt((wi*(1-wi))/(total_points-1))
Ei_ha<-Ei_per*total_area
confidence_interval<-1.96*Ei_ha
conf_int_per<-confidence_interval/total_area
ci_inf<-area-Ei_ha
ci_sup<-area+Ei_ha
}
TonC<-emission_factor*area
TonC_yr<-TonC/years
fCO2<-3.666667
TonCO2<-TonC_yr*fCO2
RE<-(Ei_per)*100+error_ef
cat(confidence_interval, "The emissions of CO2 related to deforestation due to", new_land_cover, "are", TonCO2, "TOnCO2/year with an error of ", RE, "%.")
}
defor_emiss(emission_factor = 117.06, points = 10, total_area = 9985930, years = 10, total_points = 10414)
defor_emiss<-function(area="auto", new_land_cover="the new land cover", emission_factor, error_ef=0, points, total_area, years, total_points){
if(area=="auto") {
wi<-points/total_points
area<- wi*total_area
Ei_per<-sqrt((wi*(1-wi))/(total_points-1))
Ei_ha<-Ei_per*total_area
confidence_interval<-1.96*Ei_ha
conf_int_per<-confidence_interval/total_area
ci_inf<-area-Ei_ha
ci_sup<-area+Ei_ha
error<-confidence_interval/area
}
TonC<-emission_factor*area
TonC_yr<-TonC/years
fCO2<-3.666667
TonCO2<-TonC_yr*fCO2
RE<-(emission_factor*(error))*100+error_ef*area
cat("The emissions of CO2 related to deforestation due to", new_land_cover, "are", TonCO2, "TOnCO2/year with a relative error of ", RE, "%.")
}
defor_emiss(emission_factor = 117.06, points = 10, total_area = 9985930, years = 10, total_points = 10414)
defor_emiss<-function(area="auto", new_land_cover="the new land cover", emission_factor, error_ef=0, points, total_area, years, total_points){
if(area=="auto") {
wi<-points/total_points
area<- wi*total_area
Ei_per<-sqrt((wi*(1-wi))/(total_points-1))
Ei_ha<-Ei_per*total_area
confidence_interval<-1.96*Ei_ha
conf_int_per<-confidence_interval/total_area
ci_inf<-area-Ei_ha
ci_sup<-area+Ei_ha
error<-confidence_interval/area
}
TonC<-emission_factor*area
TonC_yr<-TonC/years
fCO2<-3.666667
TonCO2<-TonC_yr*fCO2
RE<-((emission_factor*(error*area))+(error_ef*emission_factor)*area)/TonCO2*100
cat("The emissions of CO2 related to deforestation due to", new_land_cover, "are", TonCO2, "TOnCO2/year with a relative error of ", RE, "%.")
}
defor_emiss(emission_factor = 117.06, points = 10, total_area = 9985930, years = 10, total_points = 10414)
defor_emiss<-function(area="auto", new_land_cover="the new land cover", emission_factor, error_ef=0, points, total_area, years, total_points){
if(area=="auto") {
wi<-points/total_points
area<- wi*total_area
Ei_per<-sqrt((wi*(1-wi))/(total_points-1))
Ei_ha<-Ei_per*total_area
confidence_interval<-1.96*Ei_ha
conf_int_per<-confidence_interval/total_area
ci_inf<-area-Ei_ha
ci_sup<-area+Ei_ha
error<-confidence_interval/area
}
TonC<-emission_factor*area
TonC_yr<-TonC/years
fCO2<-3.666667
TonCO2<-TonC_yr*fCO2
RE<-(((emission_factor*(error*area))+(error_ef*emission_factor)*area)/TonCO2)*100
cat("The emissions of CO2 related to deforestation due to", new_land_cover, "are", TonCO2, "TOnCO2/year with a relative error of ", RE, "%.")
}
defor_emiss(emission_factor = 117.06, points = 10, total_area = 9985930, years = 10, total_points = 10414)
definitions<- function(term="auto"){
term1<-stringr::str_remove(term, " ")
term.low<-stringr::str_to_lower(term1, locale = "en")
if(term.low=="auto"){
def <- "Please, use a term from the list to get the definition or forest fact (forest, afforestation, reforestation), you can find the list in the description of the function"
} else if (term.low== "forest"){
def <-"'Forest is a large area of trees whose canopies cover at least 10 per cent of the sky spanning more than 0.5 hectares with trees higher than 5 meters and a canopy cover of more than 10 percent.' -UN-REDD"
} else if (term.low == "afforestation"){
def<-"'Afforestation means the planting of trees on land which was never forested' -UN-REDD"
} else if (term.low == "reforestation"){
def<-"'Reforestation means planting of trees on land which was forested before.' -UN-REDD"
} else if (term.low== "bamboo"){
def <-"'Bamboo is a giant woody grass which is grown chiefly in the tropics. It is one of the fastest growing plants on Earth, with reported growth rates of 100 centimeters (39 inches) in 24 hours.' -UN-REDD"
} else if (term.low== "redwoods"){
def<-"'Redwoods are the tallest trees in the world and can easily reach heights of 300 feet (91 meters).' -UN-REDD"
} else if (term.low == "mangroves"){
def<-"'Mangroves are trees or shrubs which grows in tidal, chiefly tropical, coastal swamps, having numerous tangled roots that grow above the ground and form dense thickets.' -UN-REDD"
} else if (term.low == "importance"){
def <-"'An estimated 1.6 billion people use forests for all or part of their livelihoods. Forests also play a crucial role in fighting catastrophic climate change by absorbing and storing massive amounts of CO2. Forests are home to 80% of the world’s terrestrial biodiversity.' -UN-REDD"
} else if (term.low == "floods"){
def<-"'During heavy rains, trees reduce the risk of flooding. Experts say that woodland acts as a barrier to floodwater, while trees also prevent soil erosion, reducing sediment going into rivers and increasing water absorption into the ground.' -UN-REDD"
} else if (term.low == "droughts"){
def<-"'Forests can retain excess rainwater, prevent extreme run-offs (...). They can also help mitigate the effects of droughts by releasing water in the dry season, forests can also help provide clean water and mitigate the effects of droughts' -UN-REDD"
} else if (term.low == "deforestationrate"){
def <-"'The Earth loses a forest area about the size of 40 football fields every minute.' -UN-REDD"
} else if (term.low == "temperature"){
def<-"'Trees could reduce temperatures in cities up to 8°C, lowering use of air conditioning and related emissions by up to 40 per cent.' -UN-REDD"
} else def<-"Please, use a term from the list to get the definition or forest fact(forest, afforestation, reforestation), you can find the list in the description of the function"
print(def)
}
definitions()
definitions(forest)
definitions("forest")
definitions("deforestation")
definitions("reforestation")
definitions("forest")
definitions()
definitions<- function(term="auto"){
term1<-stringr::str_remove(term, " ")
term.low<-stringr::str_to_lower(term1, locale = "en")
forest<-forest<-"'Forest is a large area of trees whose canopies cover at least 10 per cent of the sky spanning more than 0.5 hectares with trees higher than 5 meters and a canopy cover of more than 10 percent.' -UN-REDD"
defores<- "'Deforestation is the process of converting forest land to another land use.  In other words, the primary use of the land ceases to be forest'-United Nations Environment Programme, 2018"
deforate<-"'The Earth loses a forest area about the size of 40 football fields every minute.' -UN-REDD"
degra<-"'Forest degradation is the process of losing carbon stock from forest land – i.e. the land use remains forest, but the amount of carbon stock in the forest is reduced.'-United Nations Environment Programme, 2018"
affo<-"'Afforestation means the planting of trees on land which was never forested' -UN-REDD"
refo<-"'Reforestation means planting of trees on land which was forested before.' -UN-REDD"
bamboo<-"'Bamboo is a giant woody grass which is grown chiefly in the tropics. It is one of the fastest growing plants on Earth, with reported growth rates of 100 centimeters (39 inches) in 24 hours.' -UN-REDD"
redwoods<-"'Redwoods are the tallest trees in the world and can easily reach heights of 300 feet (91 meters).' -UN-REDD"
mang<-"'Mangroves are trees or shrubs which grows in tidal, chiefly tropical, coastal swamps, having numerous tangled roots that grow above the ground and form dense thickets.' -UN-REDD"
importance<-"'An estimated 1.6 billion people use forests for all or part of their livelihoods. Forests also play a crucial role in fighting catastrophic climate change by absorbing and storing massive amounts of CO2. Forests are home to 80% of the world’s terrestrial biodiversity.' -UN-REDD"
flood<-"'During heavy rains, trees reduce the risk of flooding. Experts say that woodland acts as a barrier to floodwater, while trees also prevent soil erosion, reducing sediment going into rivers and increasing water absorption into the ground.' -UN-REDD"
dry<-"'Forests can retain excess rainwater, prevent extreme run-offs (...). They can also help mitigate the effects of droughts by releasing water in the dry season, forests can also help provide clean water and mitigate the effects of droughts' -UN-REDD"
temp<-"'Trees could reduce temperatures in cities up to 8°C, lowering use of air conditioning and related emissions by up to 40 per cent.' -UN-REDD"
todas<-c(forest, defores, deforate, degra, affo, refo, bamboo, redwoods, mang, importance, flood, dry, temp)
if(term.low=="auto"){
def <- todas
} else if (term.low== "forest"){
def <- forest
} else if (term.low == "afforestation"){
def<-affo
} else if (term.low == "reforestation"){
def<-refo
} else if (term.low== "bamboo"){
def <-bamboo
} else if (term.low== "redwoods"){
def<-redwoods
} else if (term.low == "mangroves"){
def<-mang
} else if (term.low == "importance"){
def <-importance
} else if (term.low == "floods"){
def<-flood
} else if (term.low == "droughts"){
def<-dry
} else if (term.low == "deforestationrate"){
def <-deforate
} else if (term.low == "temperature"){
def<-temp
} else def<-"Please, use a term from the list to get the definition or forest fact(forest, afforestation, reforestation...), you can find the list in the description of the function or leave empty to read all"
print(def)
}
definitions()
install.packages("rasterVis")
library(RStoolbox)
library(tidyverse)
library(rgeos)
library(sp)
library(carets)
library(caret)
library(rgdal)
library(raster)
library(rasterVis)
library(viridis)
setwd("C:/Users/s1526/Dropbox/MB3_Scripts/MB3_UrbanClass")
library(RStoolbox)
library(tidyverse)
library(rgeos)
library(sp)
library(caret)
library(rgdal)
library(raster)
library(rasterVis)
library(viridis)
setwd("C:/Users/chofi/Dropbox/MB3_Scripts")
setwd("C:/Users/chofi/Documents/2019/Maestria/FieldMeasurements")
/dir.create("/Data/Masked_IBI", showWarnings = TRUE)
/dir.create("Data/Masked_IBI", showWarnings = TRUE)
/dir.create("Masked_IBI", showWarnings = TRUE)
dir.create("/Data/Masked_IBI", showWarnings = TRUE)
Data_path <- "C:/Users/chofi/Dropbox/MB3_Scripts/Data"
list.files(Data_path)
#LOAD ROI shapefile
Würzburg_ROI <- readOGR(Data_path, "Wue_MB3_extent", verbose = TRUE, encoding="ESRI Shapefile")
proj4string(Würzburg_ROI) <- CRS("+init=epsg:32632")
summary(Würzburg_ROI)
plot(Würzburg_ROI)
#LOAD bands for IBI and RGB
setwd(Data_path)
b11_MIR <- raster(list.files()[1])
b8_NIR <- raster(list.files()[5])
b4_RED <- raster(list.files()[4])
b3_GREEN <- raster(list.files()[3])
b2_BLUE <- raster(list.files()[2])
#Create RGB stack
Wü_RGB <- stack(b4_RED, b3_GREEN, b2_BLUE)
ggRGB(Wü_RGB, r=1, g=2, b=3, stretch="hist")
#IBI----
IBI <- function(MIR, NIR, GREEN, RED){
ibi <- ((2*MIR)/(MIR+NIR)-(NIR/(NIR+RED)+GREEN/(GREEN+MIR)))/
((2*MIR/(MIR+NIR))+(NIR/(NIR+RED)+GREEN/(GREEN+MIR)))
return(ibi)
}
Wü_IBI <- IBI(b11_MIR, b8_NIR, b3_GREEN, b2_BLUE)
plot(Wü_IBI)
Mask_Wü_IBI <- mask(Wü_IBI, Würzburg_ROI)
Mask_Wü_RGB <- mask(Wü_RGB, Würzburg_ROI)
Mask_Wü_RGB
ggR(Mask_Wü_IBI)
ggRGB(Mask_Wü_RGB, r=1, g=2, b=3, stretch="hist")
writeRaster(Mask_Wü_RGB, "Wü_ROI_RGB.tif", format="GTiff", overwrite=TRUE)
writeRaster(Mask_Wü_IBI, "Wü_ROI_IBI.tif", format="GTiff", overwrite=TRUE)
#Condition if > 0.013 = Built-up
Builtup_ROI_IBI <- reclassify(Mask_Wü_IBI, cbind(-Inf, 0.013, NA))
writeRaster(Builtup_ROI_IBI, "Builtup_ROI_IBI.tif", format="GTiff", overwrite=TRUE)
ggrRGB(Builtup_ROI_IBI)
ggrR(Builtup_ROI_IBI)
ggR(Builtup_ROI_IBI)
ggRGB(Builtup_ROI_IBI)
library(carets)
setwd("C:/Users/chofi/Documents/2019/Maestria/FieldMeasurements")
dir.create("/Data/Masked_IBI", showWarnings = TRUE)
dir.create("C:/Users/chofi/Documents/2019/Maestria/FieldMeasurements/Data/Masked_IBI", showWarnings = TRUE)
dir.create("C:/Users/chofi/Documents/2019/Maestria/FieldMeasurements/Data", showWarnings = TRUE)
Data_path <- "C:/Users/chofi/Dropbox/MB3_Scripts/Data"
list.files(Data_path)
#LOAD ROI shapefile
Würzburg_ROI <- readOGR(Data_path, "Wue_MB3_extent", verbose = TRUE, encoding="ESRI Shapefile")
proj4string(Würzburg_ROI) <- CRS("+init=epsg:32632")
summary(Würzburg_ROI)
plot(Würzburg_ROI)
#LOAD bands for IBI and RGB
setwd(Data_path)
b11_MIR <- raster(list.files()[1])
b8_NIR <- raster(list.files()[5])
b4_RED <- raster(list.files()[4])
b3_GREEN <- raster(list.files()[3])
b2_BLUE <- raster(list.files()[2])
#Create RGB stack
Wü_RGB <- stack(b4_RED, b3_GREEN, b2_BLUE)
ggRGB(Wü_RGB, r=1, g=2, b=3, stretch="hist")
#IBI----
IBI <- function(MIR, NIR, GREEN, RED){
ibi <- ((2*MIR)/(MIR+NIR)-(NIR/(NIR+RED)+GREEN/(GREEN+MIR)))/
((2*MIR/(MIR+NIR))+(NIR/(NIR+RED)+GREEN/(GREEN+MIR)))
return(ibi)
}
Wü_IBI <- IBI(b11_MIR, b8_NIR, b3_GREEN, b2_BLUE)
plot(Wü_IBI)
#Mask ROI of IBI
setwd("C:/Users/chofi/Documents/2019/Maestria/FieldMeasurements/Data")
Mask_Wü_IBI <- mask(Wü_IBI, Würzburg_ROI)
Mask_Wü_RGB <- mask(Wü_RGB, Würzburg_ROI)
Mask_Wü_IBI <- mask(Wü_IBI, Würzburg_ROI, maskvalue=NA)
Mask_Wü_IBI <- mask(Wü_IBI, Würzburg_ROI, maskvalue=NA)
Mask_Wü_IBI <- mask(Wü_IBI, Würzburg_ROI, updatevalue=NA)
Mask_Wü_RGB <- mask(Wü_RGB, Würzburg_ROI, updatevalue=NA)
Mask_Wü_RGB
ggR(Mask_Wü_IBI)
ggRGB(Mask_Wü_RGB, r=1, g=2, b=3, stretch="hist", ext=Würzburg_ROI)
Mask_Wü_IBI <- mask(Wü_IBI, Würzburg_ROI, updatevalue=NA)
Mask_Wü_RGB <- mask(Wü_RGB, Würzburg_ROI, updatevalue=NA)
ggR(Mask_Wü_IBI)
ggR(Mask_Wü_IBI, ext=Würzburg_ROI)
ggRGB(Mask_Wü_RGB, r=1, g=2, b=3, stretch="hist", ext=Würzburg_ROI)
#Condition if > 0.013 = Built-up
Builtup_ROI_IBI <- reclassify(Mask_Wü_IBI, cbind(-Inf, 0.013, NA))
ggR(Builtup_ROI_IBI)
plot(Builtup_ROI_IBI)
plot(Wü_IBI)
Mask_Wü_IBI <- crop(Wü_IBI, Würzburg_ROI)
Mask_Wü_RGB <- crop(Wü_RGB, Würzburg_ROI, updatevalue=NA)
Mask_Wü_RGB
ggR(Mask_Wü_IBI)
ggRGB(Mask_Wü_RGB, r=1, g=2, b=3, stretch="hist")
Mask_Wü_IBI <- crop(Wü_IBI, Würzburg_ROI)
library(RStoolbox)
library(tidyverse)
library(rgeos)
library(sp)
library(carets)
library(rgdal)
library(raster)
library(rasterVis)
library(viridis)
setwd("C:/Users/chofi/Documents/2019/Maestria/FieldMeasurements")
Data_path <- "C:/Users/chofi/Dropbox/MB3_Scripts/Data"
#LOAD ROI shapefile
Würzburg_ROI <- readOGR(Data_path, "Wue_MB3_extent", verbose = TRUE, encoding="ESRI Shapefile")
proj4string(Würzburg_ROI) <- CRS("+init=epsg:32632")
summary(Würzburg_ROI)
plot(Würzburg_ROI)
#LOAD bands for IBI and RGB
setwd(Data_path)
b11_MIR <- raster(list.files()[1])
b8_NIR <- raster(list.files()[5])
b4_RED <- raster(list.files()[4])
b3_GREEN <- raster(list.files()[3])
b2_BLUE <- raster(list.files()[2])
#Create RGB stack
Wü_RGB <- stack(b4_RED, b3_GREEN, b2_BLUE)
ggRGB(Wü_RGB, r=1, g=2, b=3, stretch="hist")
#IBI----
IBI <- function(MIR, NIR, GREEN, RED){
ibi <- ((2*MIR)/(MIR+NIR)-(NIR/(NIR+RED)+GREEN/(GREEN+MIR)))/
((2*MIR/(MIR+NIR))+(NIR/(NIR+RED)+GREEN/(GREEN+MIR)))
return(ibi)
}
Wü_IBI <- IBI(b11_MIR, b8_NIR, b3_GREEN, b2_BLUE)
plot(Wü_IBI)
#Mask ROI of IBI
setwd("C:/Users/chofi/Documents/2019/Maestria/FieldMeasurements/Data")
Mask_Wü_IBI <- crop(Wü_IBI, Würzburg_ROI)
Mask_Wü_RGB <- crop(Wü_RGB, Würzburg_ROI, updatevalue=NA)
Mask_Wü_RGB
ggR(Mask_Wü_IBI)
Mask_Wü_IBI <- mask(Wü_IBI, Würzburg_ROI)
ggR(Mask_Wü_IBI)
Mask_Wü_IBI <- crop(Wü_IBI, Würzburg_ROI)
ggR(Mask_Wü_IBI)
ggRGB(Mask_Wü_RGB, r=1, g=2, b=3, stretch="hist")
writeRaster(Mask_Wü_RGB, "Wü_ROI_RGB.tif", format="GTiff", overwrite=TRUE)
writeRaster(Mask_Wü_IBI, "Wü_ROI_IBI.tif", format="GTiff", overwrite=TRUE)
#Condition if > 0.013 = Built-up
Builtup_ROI_IBI <- reclassify(Mask_Wü_IBI, cbind(-Inf, 0.013, NA))
writeRaster(Builtup_ROI_IBI, "Builtup_ROI_IBI.tif", format="GTiff", overwrite=TRUE)
plot(Builtup_ROI_IBI)
summary(Würzburg_ROI)
#Mask ROI of IBI
setwd("C:/Users/chofi/Documents/2019/Maestria/FieldMeasurements/Data")
Mask_Wü_IBI <- crop(Wü_IBI, Würzburg_ROI)
Mask_Wü_RGB <- crop(Wü_RGB, Würzburg_ROI, updatevalue=NA)
ggR(Mask_Wü_IBI)
ggRGB(Mask_Wü_RGB, r=1, g=2, b=3, stretch="hist")
Mask_Wü_IBI <- crop(Wü_IBI, Würzburg_ROI, updatevalue=NA)
Mask_Wü_RGB <- crop(Wü_RGB, Würzburg_ROI, updatevalue=NA)
ggR(Mask_Wü_IBI)
ggRGB(Mask_Wü_RGB, r=1, g=2, b=3, stretch="hist")
